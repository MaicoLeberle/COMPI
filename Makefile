CC=g++

OS=$(shell uname -s)

ifeq ($(OS),Darwin)
	LEX=/usr/bin/flex
	YACC=/usr/bin/bison
	LDFLAGS=-L/usr/local/opt/bison/lib -L/usr/local/opt/flex/lib
	CPPFLAGS=-I/usr/local/opt/flex/include -ll -g -std=c++11 -Wno-deprecated-register -fpermissive
	FLAGS=-g -std=c++11 -Wno-deprecated-register -fpermissive
else ifeq ($(OS),Linux)
	LEX=/usr/bin/flex
	YACC=/usr/bin/bison
	CPPFLAGS=-lfl -g -std=c++11 -Wno-deprecated-register -fpermissive
	FLAGS=-g -std=c++11 -Wno-deprecated-register -fpermissive
endif

SRC=src
BUILD=build
BIN=bin
TARGET=$(BIN)/compi
TEST_SUITE=$(BIN)/test

MAINSRC=$(SRC)/main.cpp
TESTSRC=$(SRC)/test.cpp
TEST_INTER_CODE_GEN_VISITORSRC=$(SRC)/tests/test_inter_code_gen_visitor.cpp
TEST_ASM_CODE_GENERATOR_SRC=$(SRC)/tests/test_asm_code_generator.cpp
TEST_ASM_INSTRUCTION_SRC=$(SRC)/tests/test_asm_instruction.cpp
TEST_IR_PARSER_SRC=$(SRC)/tests/test_ir_parser.cpp
TEST_ASM_PARSER_SRC=$(SRC)/tests/test_asm_parser.cpp
SEMANTIC_ANALYSISSRC=$(SRC)/semantic_analysis.cpp
INTER_CODE_GEN_VISITORSRC=$(SRC)/inter_code_gen_visitor.cpp
INTERMEDIATE_SYMTABLESRC=$(SRC)/intermediate_symtable.cpp
SYMTABLESRC=$(SRC)/symtable.cpp
ASM_CODE_GENERATOR_SRC=$(SRC)/asm_code_generator.cpp
ASM_INSTRUCTION_SRC=$(SRC)/asm_instruction.cpp
LEXERSRC=$(SRC)/parser/lexer.l
PARSERSRC=$(SRC)/parser/parser.y
LEXER_IR_SRC=$(SRC)/parser/parser_ir/lexer_ir.l
PARSER_IR_SRC=$(SRC)/parser/parser_ir/parser_ir.y
LEXER_ASM_SRC=$(SRC)/parser/parser_asm/lexer_asm.l
PARSER_ASM_SRC=$(SRC)/parser/parser_asm/parser_asm.y
ASTSRC=$(SRC)/node.h
THREE_ADDRESS_CODE_SRC=$(SRC)/three_address_code.cpp

LEXERC=$(BUILD)/lexer.cpp
PARSERC=$(BUILD)/parser.cpp
PARSERH=$(BUILD)/parser.hpp
LEXER_IR_C=$(BUILD)/lexer_ir.cpp
PARSER_IR_C=$(BUILD)/parser_ir.cpp
PARSER_IR_H=$(BUILD)/parser_ir.hpp
LEXER_ASM_C=$(BUILD)/lexer_asm.cpp
PARSER_ASM_C=$(BUILD)/parser_asm.cpp
PARSER_ASM_H=$(BUILD)/parser_asm.hpp

# TODO: reescribir los nombres separando las palabras con _

MAIN=$(BUILD)/main.o
TEST_MAIN=$(BUILD)/test_main.o
TEST_INTER_CODE_GEN_VISITOR=$(BUILD)/test_inter_code_gen_visitor.o
TEST_ASM_CODE_GENERATOR=$(BUILD)/test_asm_code_generator.o
TEST_ASM_INSTRUCTION=$(BUILD)/test_asm_instruction.o
TEST_IR_PARSER=$(BUILD)/test_ir_parser.o
TEST_ASM_PARSER=$(BUILD)/test_asm_parser.o
SEMANTIC_ANALYSIS=$(BUILD)/semantic_analysis.o
INTER_CODE_GEN_VISITOR=$(BUILD)/inter_code_gen_visitor.o
THREE_ADDRESS_CODE=$(BUILD)/three_address_code.o
SYMTABLE=$(BUILD)/symtable.o
INTERMEDIATE_SYMTABLE=$(BUILD)/intermediate_symtable.o
ASM_CODE_GENERATOR = $(BUILD)/asm_code_generator.o 
ASM_INSTRUCTION = $(BUILD)/asm_instruction.o
LEXER=$(BUILD)/lexer.o
PARSER=$(BUILD)/parser.o
LEXER_IR=$(BUILD)/lexer_ir.o
PARSER_IR=$(BUILD)/parser_ir.o
LEXER_ASM=$(BUILD)/lexer_asm.o
PARSER_ASM=$(BUILD)/parser_asm.o

all: compi test_suite

compi: $(TARGET)

test_suite: $(TEST_SUITE)

$(TARGET): $(MAIN) $(SEMANTIC_ANALYSIS) $(SYMTABLE) $(INTERMEDIATE_SYMTABLE) $(LEXER) $(PARSER) $(INTER_CODE_GEN_VISITOR) $(THREE_ADDRESS_CODE) $(ASM_CODE_GENERATOR) $(ASM_INSTRUCTION)
	$(CC) -o$(TARGET) $(MAIN) $(SEMANTIC_ANALYSIS) $(INTER_CODE_GEN_VISITOR) $(THREE_ADDRESS_CODE) $(INTERMEDIATE_SYMTABLE) $(SYMTABLE) $(LEXER) $(PARSER) $(LDFLAGS) $(CPPFLAGS) $(ASM_CODE_GENERATOR) $(ASM_INSTRUCTION) $(LINKERFLAGS)

$(TEST_SUITE): $(TEST_MAIN) $(SEMANTIC_ANALYSIS) $(SYMTABLE) $(ASM_CODE_GENERATOR) $(INTERMEDIATE_SYMTABLE) $(LEXER) $(PARSER) $(TEST_INTER_CODE_GEN_VISITOR) $(TEST_ASM_CODE_GENERATOR) $(ASM_INSTRUCTION) $(TEST_ASM_INSTRUCTION) $(PARSER_IR) $(LEXER_IR) $(PARSER_ASM) $(LEXER_ASM) $(TEST_IR_PARSER) $(TEST_ASM_PARSER)
	$(CC) -o$(TEST_SUITE) $(TEST_MAIN) $(SEMANTIC_ANALYSIS) $(INTER_CODE_GEN_VISITOR) $(THREE_ADDRESS_CODE) $(INTERMEDIATE_SYMTABLE) $(SYMTABLE) $(TEST_INTER_CODE_GEN_VISITOR) $(LEXER) $(PARSER) $(LEXER_IR) $(PARSER_IR) $(LEXER_ASM) $(PARSER_ASM) $(ASM_INSTRUCTION) $(ASM_CODE_GENERATOR) $(TEST_ASM_CODE_GENERATOR) $(TEST_ASM_INSTRUCTION) $(TEST_ASM_PARSER) $(TEST_IR_PARSER) $(LDFLAGS) $(CPPFLAGS) $(LINKERFLAGS)

$(TEST_INTER_CODE_GEN_VISITOR): $(TEST_INTER_CODE_GEN_VISITORSRC) $(INTER_CODE_GEN_VISITOR)
	$(CC) -o$(TEST_INTER_CODE_GEN_VISITOR) -c $(TEST_INTER_CODE_GEN_VISITORSRC) $(FLAGS)

$(TEST_ASM_CODE_GENERATOR): $(TEST_ASM_CODE_GENERATOR_SRC) $(ASM_CODE_GENERATOR) $(ASM_INSTRUCTION)
	$(CC) -o$(TEST_ASM_CODE_GENERATOR) -c $(TEST_ASM_CODE_GENERATOR_SRC) $(FLAGS)
	
$(TEST_ASM_INSTRUCTION): $(TEST_ASM_INSTRUCTION_SRC) $(ASM_INSTRUCTION)
	$(CC) -o$(TEST_ASM_INSTRUCTION) -c $(TEST_ASM_INSTRUCTION_SRC) $(FLAGS)
	
$(TEST_IR_PARSER): $(TEST_IR_PARSER_SRC) $(PARSER_IR)
	$(CC) -o$(TEST_IR_PARSER) -c $(TEST_IR_PARSER_SRC) $(FLAGS)

$(TEST_ASM_PARSER): $(TEST_ASM_PARSER_SRC) $(PARSER_ASM)
	$(CC) -o$(TEST_ASM_PARSER) -c $(TEST_ASM_PARSER_SRC) $(FLAGS)

$(TEST_MAIN): $(TESTSRC)
	$(CC) -o$(TEST_MAIN) -c $(TESTSRC) $(FLAGS)
	
$(MAIN): $(MAINSRC)
	$(CC) -o$(MAIN) -c $(MAINSRC) $(FLAGS)
	
$(ASM_CODE_GENERATOR): $(ASM_CODE_GENERATOR_SRC) $(ASM_INSTRUCTION)
	$(CC) -o$(ASM_CODE_GENERATOR) -c $(ASM_CODE_GENERATOR_SRC) $(FLAGS)

$(ASM_INSTRUCTION): $(ASM_INSTRUCTION_SRC)
	$(CC) -o$(ASM_INSTRUCTION) -c $(ASM_INSTRUCTION_SRC) $(FLAGS)
	
$(INTER_CODE_GEN_VISITOR): $(INTER_CODE_GEN_VISITORSRC) $(THREE_ADDRESS_CODE_SRC)
	$(CC) -o$(INTER_CODE_GEN_VISITOR) -c $(INTER_CODE_GEN_VISITORSRC) $(FLAGS)
	
$(THREE_ADDRESS_CODE): $(THREE_ADDRESS_CODE_SRC)
	$(CC) -o$(THREE_ADDRESS_CODE) -c $(THREE_ADDRESS_CODE_SRC) $(FLAGS)

$(INTERMEDIATE_SYMTABLE): $(INTERMEDIATE_SYMTABLESRC)
	$(CC) -o$(INTERMEDIATE_SYMTABLE) -c $(INTERMEDIATE_SYMTABLESRC) $(FLAGS)
	
$(SYMTABLE): $(SYMTABLESRC)
	$(CC) -o$(SYMTABLE) -c $(SYMTABLESRC) $(FLAGS)

$(SEMANTIC_ANALYSIS): $(SEMANTIC_ANALYSISSRC) $(PARSER)
	$(CC) -o$(SEMANTIC_ANALYSIS) -c $(SEMANTIC_ANALYSISSRC) $(FLAGS)

$(LEXER): $(LEXERC)
	$(CC) -o$(LEXER) $(LEXERC) -c $(FLAGS)
	
$(LEXER_IR_C): $(LEXER_IR_SRC) $(PARSER_IR)
	$(LEX) -o$(LEXER_IR_C) $(LEXER_IR_SRC)
	
$(LEXER_ASM_C): $(LEXER_ASM_SRC) $(PARSER_ASM)
	$(LEX) -o$(LEXER_ASM_C) $(LEXER_ASM_SRC)

$(LEXERC): $(LEXERSRC) $(PARSER)
	$(LEX) -o$(LEXERC) $(LEXERSRC)
	
$(LEXER_IR): $(LEXER_IR_C)
	$(CC) -o$(LEXER_IR) $(LEXER_IR_C) -c $(FLAGS)
	
$(LEXER_ASM): $(LEXER_ASM_C)
	$(CC) -o$(LEXER_ASM) $(LEXER_ASM_C) -c $(FLAGS)

$(PARSER): $(PARSERH)
	$(CC) -o$(PARSER) $(PARSERC) -c $(FLAGS)

$(PARSER_IR): $(PARSER_IR_H)
	$(CC) -o$(PARSER_IR) $(PARSER_IR_C) -c $(FLAGS)

$(PARSER_ASM): $(PARSER_ASM_H)
	$(CC) -o$(PARSER_ASM) $(PARSER_ASM_C) -c $(FLAGS)

$(PARSERH): $(PARSERSRC) $(ASTSRC)
	$(YACC) -d -o$(PARSERC) $(PARSERSRC)
	
$(PARSER_IR_H): $(PARSER_IR_SRC) $(THREE_ADDRESS_CODE)
	$(YACC) -d -o$(PARSER_IR_C) $(PARSER_IR_SRC)
	
$(PARSER_ASM_H): $(PARSER_ASM_SRC) $(THREE_ADDRESS_CODE)
	$(YACC) -d -o$(PARSER_ASM_C) $(PARSER_ASM_SRC)

clean:
	rm -f $(SRC)/*~
	rm -rf $(BIN)/*
	rm -f $(BUILD)/*
